#DMP analysis 

####Example 1####
#Find DMPs
setwd("Datasets/Kidney/GSE......")

#Create function to format results for METAL software
create_summary <- function(toptable = NULL,
                           dataset_label= NULL,
                           directory = getwd())
{
    CPG <- rownames(toptable)
    ALLELE1 <- rep(1,nrow(toptable))
    ALLELE2 <- rep(2,nrow(toptable))
    TESTSTAT <- toptable$t
    PVALUE <- toptable$P.Value
    EFFECTSIZE <- toptable$logFC
    SE <- toptable$SE
    results = data.frame(CPG,
                         ALLELE1,
                         ALLELE2,
                         TESTSTAT,
                         PVALUE,
                         EFFECTSIZE,
                         SE)
    write.table(results,
                file=paste0(directory,"/",dataset_label,".tbl"),
                quote = FALSE,
                row.names = FALSE,
                col.names = TRUE,
                sep="\t")
}

#Load data
B <- fread("GSE....._normalized_batch_corrected_replicates_avg_beta.txt")
B=as.data.frame(B)
rownames(B)=B$V1
B=B[,-1]
library(minfi)
M <- logit2(B)
library(tidyverse)
pheno <- read_csv("GSE..... phenotypes.csv")
nrow(pheno)
mean(pheno$age) #53
sd(pheno$age) #18
range(pheno$age) #18 - 78
sum(pheno$Sex=="Male")/nrow(pheno) #48.3%

B=B[,colnames(B)%in%pheno$Basename]
M=M[,colnames(M)%in%pheno$Basename]

#EWAS
design=model.matrix(~age+
                        Sex+
                    ethnicity,
                    pheno)
library(limma)
fit1_M <- lmFit(M,
                design)
fit2_M <- eBayes(fit1_M)
fit1_B <- lmFit(B,
                design)
fit2_B <- eBayes(fit1_B)

coef = "age"
results <- limma::topTable(fit2_M,
                    coef=coef,
                    number=Inf,
                    p.value=1)
results_B <- limma::topTable(fit2_B,
                      coef=coef,
                      number=Inf,
                      p.value=1)
results$logFC <- results_B[rownames(results),"logFC"]
SE <- fit2_B$sigma * fit2_B$stdev.unscaled
results$SE <- SE[rownames(results),coef]

#Save p-value histogram
tiff('GSE....._pvalhist_DMPs.tiff',
     width =5,
     height = 3,
     units = 'in',
     res = 200)
ggplot(results,
       mapping = aes(x = `P.Value`))+
    labs(title="Distribution of raw p-values for age DMPs",
         x="p-value")+
    geom_histogram(color="darkblue",
                   fill="lightblue")
dev.off()

directory = "Datasets/Kidney/GSE....."
create_summary(toptable = results,
               dataset_label = "GSE......",
               directory = directory)

#Save residuals
ResidualsMatrix <- residuals(fit2_M, M)
write.table(signif(ResidualsMatrix,digits = 4),
            file="GSE......_M_res.txt",
            quote = FALSE,
            row.names = TRUE,
            col.names = TRUE,
            sep="\t")
resid=ResidualsMatrix

####Example 2####
#Find DMPs
setwd("Datasets/Lung/GSE......")

#Create function to format results for METAL software
create_summary <- function(toptable = NULL,
                           dataset_label= NULL,
                           directory = getwd())
{
  CPG <- rownames(toptable)
  ALLELE1 <- rep(1,nrow(toptable))
  ALLELE2 <- rep(2,nrow(toptable))
  TESTSTAT <- toptable$t
  PVALUE <- toptable$P.Value
  EFFECTSIZE <- toptable$logFC
  SE <- toptable$SE
  results = data.frame(CPG,
                       ALLELE1,
                       ALLELE2,
                       TESTSTAT,
                       PVALUE,
                       EFFECTSIZE,
                       SE)
  write.table(results,
              file=paste0(directory,"/",dataset_label,".tbl"),
              quote = FALSE,
              row.names = FALSE,
              col.names = TRUE,
              sep="\t")
}

#Load data
B <- read.table("GSE......_normalized_batch_corrected_beta.txt")
B=as.data.frame(B)
colnames(B)=sub("_.*", "", colnames(B))
library(minfi)
M <- logit2(B)
library(tidyverse)
pheno <- read_csv("GSE...... phenotypes.csv")
pheno=pheno[pheno$setd2=="Normal",]
B=B[,colnames(B)%in%pheno$Sample_Name]
nrow(pheno)
pheno$age=as.numeric(pheno$age)
mean(pheno$age)
sd(pheno$age)
range(pheno$age)
sum(pheno$Sex=="M")/nrow(pheno)

#EWAS
design=model.matrix(~age+Sex,
                    pheno)
library(limma)
fit1_M <- lmFit(M,
                design)
fit2_M <- eBayes(fit1_M)
fit1_B <- lmFit(B,
                design)
fit2_B <- eBayes(fit1_B)

coef = "age"
results <- limma::topTable(fit2_M,
                    coef=coef,
                    number=Inf,
                    p.value=1)
results_B <- limma::topTable(fit2_B,
                      coef=coef,
                      number=Inf,
                      p.value=1)
results$logFC <- results_B[rownames(results),"logFC"]
SE <- fit2_B$sigma * fit2_B$stdev.unscaled
results$SE <- SE[rownames(results),coef]

#Save p-value histogram
tiff('GSE......_pvalhist_DMPs.tiff',
     width =5,
     height = 3,
     units = 'in',
     res = 200)
ggplot(results,
       mapping = aes(x = `P.Value`))+
  labs(title="Distribution of raw p-values for age DMPs",
       x="p-value")+
  geom_histogram(color="darkblue",
                 fill="lightblue")
dev.off()

directory = "Datasets/Lung/GSE......"
create_summary(toptable = results,
               dataset_label = "GSE......",
               directory = directory)

#Save residuals
ResidualsMatrix <- residuals(fit2_M, M)
write.table(signif(ResidualsMatrix,digits = 4),
            file="GSE......_M_res.txt",
            quote = FALSE,
            row.names = TRUE,
            col.names = TRUE,
            sep="\t")
resid=ResidualsMatrix

